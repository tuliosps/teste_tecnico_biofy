version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: postgres_contracts
    environment:
      POSTGRES_DB: contracts_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - contracts_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend_contracts
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/contracts_db
      SECRET_KEY: bpqR64IxFS1E5o-SI6HvaMgbonmN53DKM-IAdexoon4
      GEMINI_API_KEY: sua chave gemini aqui
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - contracts_network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  contracts_network:
    driver: bridge 
